@property --Carousel-activeIndex {
  inherits: true;
  syntax: "<number>";
  initial-value: 0;
}

@property --Carousel-slideCount {
  inherits: true;
  syntax: "<number>";
  initial-value: 100;
}

@property --Carousel-viewCount {
  inherits: true;
  syntax: "<number>";
  initial-value: 1;
}

@property --Carousel-animateDuration {
  inherits: true;
  syntax: "<time>";
  initial-value: 500ms;
}

@property --Carousel-slideItemIndex {
  inherits: true;
  syntax: "<number>";
  initial-value: 0;
}

@property --Carousel-scale {
  inherits: true;
  syntax: "<number>";
  initial-value: 1;
}

.Carousel {
  position: relative;
  display: block;
  inline-size: 100%;

  &.Carousel--type-gallery {
    inline-size: 50%;
  }

  &.Carousel--type-clip {
    overflow: clip;
  }
}

.Carousel-slideContainer {
  display: grid;
  grid-template-columns: repeat(var(--Carousel-slideCount), 1fr);
  inline-size: calc(var(--Carousel-slideCount) * 100% / var(--Carousel-viewCount));
  block-size: 100%;
  transform: translateX(calc(-100% / var(--Carousel-slideCount) * var(--Carousel-activeIndex)));
  transition: transform var(--Carousel-animateDuration) ease-out;
}

.Carousel-slideItem {
  --move: round(calc(var(--Carousel-slideCount) - 1) / 2, 1) - 1;

  position: relative;
  block-size: 100%;
  transform: translateX(
    calc(
      100% * var(--Carousel-slideCount) *
        round(
          down,
          (
              var(--Carousel-activeIndex) + var(--Carousel-slideCount) -
                var(--Carousel-slideItemIndex) - var(--move)
            ) /
            var(--Carousel-slideCount),
          1
        )
    )
  );

  &.Carousel-slideGalleryItem {
    --Carousel-scale: 0.8;

    opacity: 0.2;

    &.Carousel-slideItem--active {
      --Carousel-scale: 1;

      opacity: 1;
    }
  }
}

.Carousel-button {
  position: absolute !important;
  inset-block-start: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  block-size: 3rem;
  aspect-ratio: 1;
  font-size: 1.5rem;
  cursor: pointer;
  background-color: var(--ui);
  border-radius: var(--borderRadius);
  transform: translateY(-50%);

  &:hover {
    background-color: var(--uiHover);
  }

  &.Carousel-button--previous {
    inset-inline-start: 2rem;
  }

  &.Carousel-button--next {
    inset-inline-end: 2rem;
  }

  &.Carousel-button--animate {
    inset-block-start: 1rem;
    inset-inline-end: 2rem;
    transform: translateY(0);
  }
}

.Carousel-menu {
  position: absolute;
  inset-block-end: 1rem;
  inset-inline-start: 50%;
  display: flex;
  transform: translateX(-50%);
}

.Carousel-menuItem {
  --background: var(--primary);

  padding: 0.5rem;
  cursor: pointer;

  &:hover {
    --background: var(--surfaceHover);
  }

  &::after {
    display: block;
    block-size: 0.75rem;
    aspect-ratio: 1;
    content: "";
    background-color: var(--background);
    border-radius: 50%;
    transition: background-color 200ms ease-in-out;
  }

  &.Carousel-menuItem--active {
    --background: var(--uiActive);
  }
}

/* OUT */
.Carousel-containerFade {
  display: flex;
  align-items: center;
  justify-content: center;
}

.Carousel-content {
  position: absolute;
  inset-block-start: 0;
  inset-inline-start: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  inline-size: 100%;
  block-size: 100%;
  padding: 1rem;
  text-align: center;
  opacity: 0;
  transform: translateY(20px);
  transition:
    opacity var(--Carousel-animateDuration) ease-out var(--Carousel-animateDuration),
    transform var(--Carousel-animateDuration) ease-out var(--Carousel-animateDuration);

  .Carousel-trackItem--active & {
    opacity: 1;
    transform: translateY(0);
  }
}

.Carousel-example {
  display: flex;
  flex-direction: column;
  gap: 5px;
  align-self: center;
  inline-size: 50%;
  padding: 1.5em;
  background-color: var(--primaryBlock);
  border: 1px solid var(--primary);
  border-radius: var(--borderRadius);
}

.Carousel-exampleCard {
  margin: 1em;
}

.Carousel-exampleContent {
  display: flex;
  align-items: center;
  justify-content: center;
  inline-size: 100%;
  block-size: 400px;
  padding: 2em;
  vertical-align: middle;
  background-color: oklch(0% 0 0deg / 40%);
  border-radius: var(--borderRadius);
}
